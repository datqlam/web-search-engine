{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/Sort/Sort.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class Sort extends Component {\n  constructor(props) {\n    super(props);\n\n    this._computeValue = (sortBy, sortOrder) => {\n      return \"\".concat(sortBy, \"-\").concat(sortOrder);\n    };\n\n    this._renderElement = (currentSortBy, currentSortOrder, options, onValueChange) => {\n      const selected = this._computeValue(currentSortBy, currentSortOrder);\n\n      const _options = options.map((element, index) => {\n        return {\n          key: index,\n          text: element.text,\n          value: element.value\n        };\n      });\n\n      return React.createElement(Dropdown, {\n        selection: true,\n        compact: true,\n        options: _options,\n        value: selected,\n        onChange: (e, {\n          value\n        }) => onValueChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    };\n\n    this.onChange = value => {\n      if (value === this._computeValue(this.props.currentSortBy, this.props.currentSortOrder)) return;\n      const selected = this.options.find(option => option.value === value);\n      this.updateQuerySorting(selected.sortBy, selected.sortOrder);\n    };\n\n    this.options = props.values;\n    this.updateQuerySorting = props.updateQuerySorting;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n    this.options.forEach(option => option['value'] = this._computeValue(option.sortBy, option.sortOrder)); // compute default value for sort field and sort order\n\n    const defaultValue = this.options.find(option => 'default' in option && option.default);\n    this.defaultValue = {\n      sortBy: defaultValue.sortBy || this.options[0].sortBy,\n      sortOrder: defaultValue.sortOrder || this.options[0].sortOrder\n    };\n    const defaultValueOnEmptyString = this.options.find(option => 'defaultOnEmptyString' in option && option.defaultOnEmptyString);\n    this.defaultValueOnEmptyString = {\n      sortBy: defaultValueOnEmptyString.sortBy || this.options[0].sortBy,\n      sortOrder: defaultValueOnEmptyString.sortOrder || this.options[0].sortOrder\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.currentSortBy === null && this.props.currentSortOrder === null) {\n      const defaultValue = this.props.currentQueryString ? this.defaultValue : this.defaultValueOnEmptyString;\n      this.setInitialState({\n        sortBy: defaultValue.sortBy,\n        sortOrder: defaultValue.sortOrder\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentSortBy = _this$props.currentSortBy,\n          currentSortOrder = _this$props.currentSortOrder,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults;\n    return React.createElement(ShouldRender, {\n      condition: currentSortBy !== null && currentSortOrder !== null && !loading && totalResults > 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.renderElement(currentSortBy, currentSortOrder, this.options, this.onChange));\n  }\n\n}\nSort.propTypes = {\n  values: PropTypes.array.isRequired,\n  currentSortBy: PropTypes.string,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySorting: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func\n};\nSort.defaultProps = {\n  currentSortBy: null,\n  currentSortOrder: null,\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/Sort/Sort.js"],"names":["React","Component","PropTypes","Dropdown","ShouldRender","Sort","constructor","props","_computeValue","sortBy","sortOrder","_renderElement","currentSortBy","currentSortOrder","options","onValueChange","selected","_options","map","element","index","key","text","value","e","onChange","find","option","updateQuerySorting","values","setInitialState","renderElement","forEach","defaultValue","default","defaultValueOnEmptyString","defaultOnEmptyString","componentDidMount","currentQueryString","render","loading","totalResults","propTypes","array","isRequired","string","bool","number","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.updateQuerySorting = props.updateQuerySorting;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n\n    this.options.forEach(\n      option =>\n        (option['value'] = this._computeValue(option.sortBy, option.sortOrder))\n    );\n\n    // compute default value for sort field and sort order\n    const defaultValue = this.options.find(\n      option => 'default' in option && option.default\n    );\n    this.defaultValue = {\n      sortBy: defaultValue.sortBy || this.options[0].sortBy,\n      sortOrder: defaultValue.sortOrder || this.options[0].sortOrder,\n    };\n\n    const defaultValueOnEmptyString = this.options.find(\n      option => 'defaultOnEmptyString' in option && option.defaultOnEmptyString\n    );\n    this.defaultValueOnEmptyString = {\n      sortBy: defaultValueOnEmptyString.sortBy || this.options[0].sortBy,\n      sortOrder:\n        defaultValueOnEmptyString.sortOrder || this.options[0].sortOrder,\n    };\n  }\n\n  componentDidMount() {\n    if (\n      this.props.currentSortBy === null &&\n      this.props.currentSortOrder === null\n    ) {\n      const defaultValue = this.props.currentQueryString\n        ? this.defaultValue\n        : this.defaultValueOnEmptyString;\n      this.setInitialState({\n        sortBy: defaultValue.sortBy,\n        sortOrder: defaultValue.sortOrder,\n      });\n    }\n  }\n\n  _computeValue = (sortBy, sortOrder) => {\n    return `${sortBy}-${sortOrder}`;\n  };\n\n  _renderElement = (\n    currentSortBy,\n    currentSortOrder,\n    options,\n    onValueChange\n  ) => {\n    const selected = this._computeValue(currentSortBy, currentSortOrder);\n    const _options = options.map((element, index) => {\n      return {\n        key: index,\n        text: element.text,\n        value: element.value,\n      };\n    });\n    return (\n      <Dropdown\n        selection\n        compact\n        options={_options}\n        value={selected}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    );\n  };\n\n  onChange = value => {\n    if (\n      value ===\n      this._computeValue(this.props.currentSortBy, this.props.currentSortOrder)\n    )\n      return;\n    const selected = this.options.find(option => option.value === value);\n    this.updateQuerySorting(selected.sortBy, selected.sortOrder);\n  };\n\n  render() {\n    const {\n      currentSortBy,\n      currentSortOrder,\n      loading,\n      totalResults,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={\n          currentSortBy !== null &&\n          currentSortOrder !== null &&\n          !loading &&\n          totalResults > 1\n        }\n      >\n        {this.renderElement(\n          currentSortBy,\n          currentSortOrder,\n          this.options,\n          this.onChange\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nSort.propTypes = {\n  values: PropTypes.array.isRequired,\n  currentSortBy: PropTypes.string,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySorting: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func,\n};\n\nSort.defaultProps = {\n  currentSortBy: null,\n  currentSortOrder: null,\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}