{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/EmptyResults/EmptyResults.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\nimport _isEmpty from 'lodash/isEmpty';\nimport { ShouldRender } from '../ShouldRender';\nexport default class EmptyResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderElement = (queryString, resetQuery) => React.createElement(Segment, {\n      placeholder: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), \"No results found!\"), React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Current search \\\"\", queryString, \"\\\"\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      onClick: () => resetQuery(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Clear query\"));\n\n    this.resetQuery = props.resetQuery;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  render() {\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          error = _this$props.error,\n          queryString = _this$props.queryString;\n    return React.createElement(ShouldRender, {\n      condition: !loading && _isEmpty(error) && totalResults === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderElement(queryString, this.resetQuery));\n  }\n\n}\nEmptyResults.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  error: PropTypes.object.isRequired,\n  queryString: PropTypes.string,\n  resetQuery: PropTypes.func.isRequired\n};\nEmptyResults.defaultProps = {\n  queryString: '',\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/EmptyResults/EmptyResults.js"],"names":["React","Component","PropTypes","Segment","Header","Icon","Button","_isEmpty","ShouldRender","EmptyResults","constructor","props","_renderElement","queryString","resetQuery","renderElement","render","loading","totalResults","error","propTypes","bool","isRequired","number","object","string","func","defaultProps"],"mappings":";;AAAA;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,eAAe,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAClDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,cANmB,GAMF,CAACC,WAAD,EAAcC,UAAd,KACf,oBAAC,OAAD;AAAS,MAAA,WAAW,MAApB;AAAqB,MAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,sBADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBD,WAArB,OALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,MAAMC,UAAU,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CAPiB;;AAEjB,SAAKA,UAAL,GAAkBH,KAAK,CAACG,UAAxB;AACA,SAAKC,aAAL,GAAqBJ,KAAK,CAACI,aAAN,IAAuB,KAAKH,cAAjD;AACD;;AAgBDI,EAAAA,MAAM,GAAG;AAAA,wBAC+C,KAAKL,KADpD;AAAA,UACCM,OADD,eACCA,OADD;AAAA,UACUC,YADV,eACUA,YADV;AAAA,UACwBC,KADxB,eACwBA,KADxB;AAAA,UAC+BN,WAD/B,eAC+BA,WAD/B;AAEP,WACE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAE,CAACI,OAAD,IAAYV,QAAQ,CAACY,KAAD,CAApB,IAA+BD,YAAY,KAAK,CAD7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKH,aAAL,CAAmBF,WAAnB,EAAgC,KAAKC,UAArC,CAHH,CADF;AAOD;;AA9BiD;AAiCpDL,YAAY,CAACW,SAAb,GAAyB;AACvBH,EAAAA,OAAO,EAAEf,SAAS,CAACmB,IAAV,CAAeC,UADD;AAEvBJ,EAAAA,YAAY,EAAEhB,SAAS,CAACqB,MAAV,CAAiBD,UAFR;AAGvBH,EAAAA,KAAK,EAAEjB,SAAS,CAACsB,MAAV,CAAiBF,UAHD;AAIvBT,EAAAA,WAAW,EAAEX,SAAS,CAACuB,MAJA;AAKvBX,EAAAA,UAAU,EAAEZ,SAAS,CAACwB,IAAV,CAAeJ;AALJ,CAAzB;AAQAb,YAAY,CAACkB,YAAb,GAA4B;AAC1Bd,EAAAA,WAAW,EAAE,EADa;AAE1BE,EAAAA,aAAa,EAAE;AAFW,CAA5B","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\nimport _isEmpty from 'lodash/isEmpty';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class EmptyResults extends Component {\n  constructor(props) {\n    super(props);\n    this.resetQuery = props.resetQuery;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  _renderElement = (queryString, resetQuery) => (\n    <Segment placeholder textAlign=\"center\">\n      <Header icon>\n        <Icon name=\"search\" />\n        No results found!\n      </Header>\n      <em>Current search \"{queryString}\"</em>\n      <br />\n      <Button primary onClick={() => resetQuery()}>\n        Clear query\n      </Button>\n    </Segment>\n  );\n\n  render() {\n    const { loading, totalResults, error, queryString } = this.props;\n    return (\n      <ShouldRender\n        condition={!loading && _isEmpty(error) && totalResults === 0}\n      >\n        {this.renderElement(queryString, this.resetQuery)}\n      </ShouldRender>\n    );\n  }\n}\n\nEmptyResults.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  error: PropTypes.object.isRequired,\n  queryString: PropTypes.string,\n  resetQuery: PropTypes.func.isRequired,\n};\n\nEmptyResults.defaultProps = {\n  queryString: '',\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}