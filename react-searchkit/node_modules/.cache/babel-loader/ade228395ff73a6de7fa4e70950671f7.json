{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/LayoutSwitcher/LayoutSwitcher.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class LayoutSwitcher extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderElement = (currentLayout, onLayoutChange) => {\n      const clickHandler = (event, {\n        name\n      }) => {\n        onLayoutChange(name);\n      };\n\n      return React.createElement(Menu, {\n        compact: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        name: \"list\",\n        active: currentLayout === 'list',\n        onClick: clickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"list layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(Menu.Item, {\n        name: \"grid\",\n        active: currentLayout === 'grid',\n        onClick: clickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"grid layout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    };\n\n    this.onLayoutChange = layoutName => {\n      this.updateLayout(layoutName);\n    };\n\n    this.defaultValue = this.props.defaultLayout;\n    this.updateLayout = props.updateLayout;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentLayout === null) {\n      this.setInitialState({\n        layout: this.defaultValue\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentLayout = _this$props.currentLayout,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults;\n    return React.createElement(ShouldRender, {\n      condition: currentLayout !== null && !loading && totalResults > 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.renderElement(currentLayout, this.onLayoutChange));\n  }\n\n}\nLayoutSwitcher.propTypes = {\n  defaultLayout: PropTypes.oneOf(['list', 'grid']),\n  updateLayout: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  currentLayout: PropTypes.string,\n  totalResults: PropTypes.number.isRequired,\n  renderElement: PropTypes.func\n};\nLayoutSwitcher.defaultProps = {\n  defaultLayout: 'list',\n  currentLayout: null,\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/LayoutSwitcher/LayoutSwitcher.js"],"names":["React","Component","PropTypes","Menu","Icon","ShouldRender","LayoutSwitcher","constructor","props","_renderElement","currentLayout","onLayoutChange","clickHandler","event","name","layoutName","updateLayout","defaultValue","defaultLayout","setInitialState","renderElement","componentDidMount","layout","render","loading","totalResults","propTypes","oneOf","func","isRequired","bool","string","number","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class LayoutSwitcher extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultValue = this.props.defaultLayout;\n    this.updateLayout = props.updateLayout;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  _renderElement = (currentLayout, onLayoutChange) => {\n    const clickHandler = (event, { name }) => {\n      onLayoutChange(name);\n    };\n    return (\n      <Menu compact icon>\n        <Menu.Item\n          name=\"list\"\n          active={currentLayout === 'list'}\n          onClick={clickHandler}\n        >\n          <Icon name=\"list layout\" />\n        </Menu.Item>\n        <Menu.Item\n          name=\"grid\"\n          active={currentLayout === 'grid'}\n          onClick={clickHandler}\n        >\n          <Icon name=\"grid layout\" />\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  componentDidMount() {\n    if (this.props.currentLayout === null) {\n      this.setInitialState({\n        layout: this.defaultValue,\n      });\n    }\n  }\n\n  onLayoutChange = layoutName => {\n    this.updateLayout(layoutName);\n  };\n\n  render() {\n    const { currentLayout, loading, totalResults } = this.props;\n    return (\n      <ShouldRender\n        condition={currentLayout !== null && !loading && totalResults > 0}\n      >\n        {this.renderElement(currentLayout, this.onLayoutChange)}\n      </ShouldRender>\n    );\n  }\n}\n\nLayoutSwitcher.propTypes = {\n  defaultLayout: PropTypes.oneOf(['list', 'grid']),\n  updateLayout: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  currentLayout: PropTypes.string,\n  totalResults: PropTypes.number.isRequired,\n  renderElement: PropTypes.func,\n};\n\nLayoutSwitcher.defaultProps = {\n  defaultLayout: 'list',\n  currentLayout: null,\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}