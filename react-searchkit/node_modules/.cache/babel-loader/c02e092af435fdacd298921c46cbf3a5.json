{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/ShouldRender/ShouldRender.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nexport default class ShouldRender extends Component {\n  render() {\n    let condition = this.props.condition;\n    return condition ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.children) : null;\n  }\n\n}\nShouldRender.propTypes = {\n  condition: PropTypes.bool\n};\nShouldRender.defaultProps = {\n  condition: true\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ShouldRender/ShouldRender.js"],"names":["React","Component","Fragment","PropTypes","ShouldRender","render","condition","props","children","propTypes","bool","defaultProps"],"mappings":";;AAAA;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAClDI,EAAAA,MAAM,GAAG;AAAA,QACDC,SADC,GACa,KAAKC,KADlB,CACDD,SADC;AAEP,WAAOA,SAAS,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,KAAKC,KAAL,CAAWC,QAAtB,CAAH,GAAgD,IAAhE;AACD;;AAJiD;AAOpDJ,YAAY,CAACK,SAAb,GAAyB;AACvBH,EAAAA,SAAS,EAAEH,SAAS,CAACO;AADE,CAAzB;AAIAN,YAAY,CAACO,YAAb,GAA4B;AAC1BL,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ShouldRender extends Component {\n  render() {\n    let { condition } = this.props;\n    return condition ? <Fragment>{this.props.children}</Fragment> : null;\n  }\n}\n\nShouldRender.propTypes = {\n  condition: PropTypes.bool,\n};\n\nShouldRender.defaultProps = {\n  condition: true,\n};\n"]},"metadata":{},"sourceType":"module"}