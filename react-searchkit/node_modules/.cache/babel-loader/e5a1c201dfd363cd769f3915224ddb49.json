{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/ResultsGrid/ResultsGrid.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _truncate from 'lodash/truncate';\nimport { Card, Image } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class ResultsGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  _renderResult(result, index) {\n    let metadata = result.metadata;\n    return React.createElement(Card, {\n      fluid: true,\n      key: index,\n      href: \"#\".concat(metadata.recid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: result.imageSrc || 'https://via.placeholder.com/200',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, metadata.title.title || metadata.title), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, metadata.publication_date), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, _truncate(metadata.description, {\n      length: 200\n    }))));\n  }\n\n  _renderElement(results, resultsPerRow) {\n    const _results = results.map((result, index) => this._renderResult(result, index));\n\n    return React.createElement(Card.Group, {\n      itemsPerRow: resultsPerRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, _results);\n  }\n\n  render() {\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          results = _this$props.results;\n    const resultsPerRow = this.props.resultsPerRow;\n    return React.createElement(ShouldRender, {\n      condition: !loading && totalResults > 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.renderElement(results, resultsPerRow));\n  }\n\n}\nResultsGrid.propTypes = {\n  resultsPerRow: PropTypes.number,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  renderElement: PropTypes.func\n};\nResultsGrid.defaultProps = {\n  resultsPerRow: 3,\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ResultsGrid/ResultsGrid.js"],"names":["React","Component","PropTypes","_truncate","Card","Image","ShouldRender","ResultsGrid","constructor","props","renderElement","_renderElement","_renderResult","result","index","metadata","recid","imageSrc","title","publication_date","description","length","results","resultsPerRow","_results","map","render","loading","totalResults","propTypes","number","bool","isRequired","array","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _truncate from 'lodash/truncate';\nimport { Card, Image } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class ResultsGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  _renderResult(result, index) {\n    let metadata = result.metadata;\n    return (\n      <Card fluid key={index} href={`#${metadata.recid}`}>\n        <Image src={result.imageSrc || 'https://via.placeholder.com/200'} />\n        <Card.Content>\n          <Card.Header>{metadata.title.title || metadata.title}</Card.Header>\n          <Card.Meta>{metadata.publication_date}</Card.Meta>\n          <Card.Description>\n            {_truncate(metadata.description, { length: 200 })}\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  _renderElement(results, resultsPerRow) {\n    const _results = results.map((result, index) =>\n      this._renderResult(result, index)\n    );\n\n    return <Card.Group itemsPerRow={resultsPerRow}>{_results}</Card.Group>;\n  }\n\n  render() {\n    const { loading, totalResults, results } = this.props;\n    const resultsPerRow = this.props.resultsPerRow;\n    return (\n      <ShouldRender condition={!loading && totalResults > 0}>\n        {this.renderElement(results, resultsPerRow)}\n      </ShouldRender>\n    );\n  }\n}\n\nResultsGrid.propTypes = {\n  resultsPerRow: PropTypes.number,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  renderElement: PropTypes.func,\n};\n\nResultsGrid.defaultProps = {\n  resultsPerRow: 3,\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}