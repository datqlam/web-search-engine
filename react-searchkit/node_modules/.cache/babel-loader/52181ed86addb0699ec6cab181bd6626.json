{"ast":null,"code":"/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { connect } from '../../store';\nimport { updateQuerySortOrder, setInitialState } from '../../state/actions';\nimport SortOrderComponent from './SortOrder';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySortOrder: sortOrderValue => dispatch(updateQuerySortOrder(sortOrderValue)),\n  setInitialState: value => dispatch(setInitialState(value))\n});\n\nexport const SortOrder = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n  currentSortOrder: state.query.sortOrder\n}), mapDispatchToProps)(SortOrderComponent);","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/SortOrder/index.js"],"names":["connect","updateQuerySortOrder","setInitialState","SortOrderComponent","mapDispatchToProps","dispatch","sortOrderValue","value","SortOrder","state","loading","results","totalResults","data","total","currentSortOrder","query","sortOrder"],"mappings":"AAAA;;;;;;;AAQA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,qBAAtD;AACA,OAAOC,kBAAP,MAA+B,aAA/B;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCJ,EAAAA,oBAAoB,EAAEK,cAAc,IAClCD,QAAQ,CAACJ,oBAAoB,CAACK,cAAD,CAArB,CAF4B;AAGtCJ,EAAAA,eAAe,EAAEK,KAAK,IAAIF,QAAQ,CAACH,eAAe,CAACK,KAAD,CAAhB;AAHI,CAAL,CAAnC;;AAMA,OAAO,MAAMC,SAAS,GAAGR,OAAO,CAC9BS,KAAK,KAAK;AACRC,EAAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcD,OADf;AAERE,EAAAA,YAAY,EAAEH,KAAK,CAACE,OAAN,CAAcE,IAAd,CAAmBC,KAFzB;AAGRC,EAAAA,gBAAgB,EAAEN,KAAK,CAACO,KAAN,CAAYC;AAHtB,CAAL,CADyB,EAM9Bb,kBAN8B,CAAP,CAOvBD,kBAPuB,CAAlB","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQuerySortOrder, setInitialState } from '../../state/actions';\nimport SortOrderComponent from './SortOrder';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySortOrder: sortOrderValue =>\n    dispatch(updateQuerySortOrder(sortOrderValue)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const SortOrder = connect(\n  state => ({\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentSortOrder: state.query.sortOrder,\n  }),\n  mapDispatchToProps\n)(SortOrderComponent);\n"]},"metadata":{},"sourceType":"module"}