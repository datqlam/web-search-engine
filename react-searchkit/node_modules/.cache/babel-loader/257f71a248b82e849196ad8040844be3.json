{"ast":null,"code":"/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport _get from 'lodash/get';\nimport _hasIn from 'lodash/hasIn';\nimport Qs from 'qs';\nimport { InvenioSearchApi } from './InvenioSearchApi';\n\nclass InvenioSuggestionRequestSerializer {\n  constructor(queryField) {\n    this.serialize = stateQuery => {\n      const suggestionString = stateQuery.suggestionString;\n      const getParams = {};\n\n      if (suggestionString !== null) {\n        getParams['q'] = this.queryField + ':' + suggestionString;\n      }\n\n      return Qs.stringify(getParams, {\n        arrayFormat: 'repeat',\n        encode: false\n      });\n    };\n\n    this.queryField = queryField;\n  }\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n\n\n}\n\nclass InvenioSuggestionResponseSerializer {\n  constructor(responseField) {\n    this._serializeSuggestions = responseHits => {\n      return Array.from(new Set(responseHits.map(hit => _get(hit.metadata, this.responseFieldPath))));\n    };\n\n    this.serialize = payload => {\n      return {\n        suggestions: this._serializeSuggestions(payload.hits.hits || [])\n      };\n    };\n\n    this.responseFieldPath = responseField.split('.');\n  }\n\n}\n\nexport class InvenioSuggestionApi extends InvenioSearchApi {\n  validateConfig(config) {\n    super.validateConfig(config);\n\n    if (!_hasIn(config, 'invenio.suggestions.queryField')) {\n      throw new Error('InvenioSuggestionApi config: `invenio.suggestions.queryField` is required.');\n    }\n\n    if (!_hasIn(config, 'invenio.suggestions.responseField')) {\n      throw new Error('InvenioSuggestionApi config: `invenio.suggestions.queryField` is responseField.');\n    }\n  }\n\n  initSerializers(config) {\n    const requestSerializerCls = _get(config, 'invenio.requestSerializer', InvenioSuggestionRequestSerializer);\n\n    const responseSerializerCls = _get(config, 'invenio.responseSerializer', InvenioSuggestionResponseSerializer);\n\n    this.requestSerializer = new requestSerializerCls(config.invenio.suggestions.queryField);\n    this.responseSerializer = new responseSerializerCls(config.invenio.suggestions.responseField);\n  }\n\n}","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/api/contrib/invenio/InvenioSuggestionApi.js"],"names":["_get","_hasIn","Qs","InvenioSearchApi","InvenioSuggestionRequestSerializer","constructor","queryField","serialize","stateQuery","suggestionString","getParams","stringify","arrayFormat","encode","InvenioSuggestionResponseSerializer","responseField","_serializeSuggestions","responseHits","Array","from","Set","map","hit","metadata","responseFieldPath","payload","suggestions","hits","split","InvenioSuggestionApi","validateConfig","config","Error","initSerializers","requestSerializerCls","responseSerializerCls","requestSerializer","invenio","responseSerializer"],"mappings":"AAAA;;;;;;;AAQA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,kCAAN,CAAyC;AACvCC,EAAAA,WAAW,CAACC,UAAD,EAAa;AAAA,SAQxBC,SARwB,GAQZC,UAAU,IAAI;AAAA,YAChBC,gBADgB,GACKD,UADL,CAChBC,gBADgB;AAGxB,YAAMC,SAAS,GAAG,EAAlB;;AACA,UAAID,gBAAgB,KAAK,IAAzB,EAA+B;AAC7BC,QAAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,KAAKJ,UAAL,GAAkB,GAAlB,GAAwBG,gBAAzC;AACD;;AAED,aAAOP,EAAE,CAACS,SAAH,CAAaD,SAAb,EAAwB;AAAEE,QAAAA,WAAW,EAAE,QAAf;AAAyBC,QAAAA,MAAM,EAAE;AAAjC,OAAxB,CAAP;AACD,KAjBuB;;AACtB,SAAKP,UAAL,GAAkBA,UAAlB;AACD;AAED;;;;;;AALuC;;AAqBzC,MAAMQ,mCAAN,CAA0C;AACxCT,EAAAA,WAAW,CAACU,aAAD,EAAgB;AAAA,SAI3BC,qBAJ2B,GAIHC,YAAY,IAAI;AACtC,aAAOC,KAAK,CAACC,IAAN,CACL,IAAIC,GAAJ,CACEH,YAAY,CAACI,GAAb,CAAiBC,GAAG,IAAItB,IAAI,CAACsB,GAAG,CAACC,QAAL,EAAe,KAAKC,iBAApB,CAA5B,CADF,CADK,CAAP;AAKD,KAV0B;;AAAA,SAgB3BjB,SAhB2B,GAgBfkB,OAAO,IAAI;AACrB,aAAO;AACLC,QAAAA,WAAW,EAAE,KAAKV,qBAAL,CAA2BS,OAAO,CAACE,IAAR,CAAaA,IAAb,IAAqB,EAAhD;AADR,OAAP;AAGD,KApB0B;;AACzB,SAAKH,iBAAL,GAAyBT,aAAa,CAACa,KAAd,CAAoB,GAApB,CAAzB;AACD;;AAHuC;;AAwB1C,OAAO,MAAMC,oBAAN,SAAmC1B,gBAAnC,CAAoD;AACzD2B,EAAAA,cAAc,CAACC,MAAD,EAAS;AACrB,UAAMD,cAAN,CAAqBC,MAArB;;AAEA,QAAI,CAAC9B,MAAM,CAAC8B,MAAD,EAAS,gCAAT,CAAX,EAAuD;AACrD,YAAM,IAAIC,KAAJ,CACJ,4EADI,CAAN;AAGD;;AACD,QAAI,CAAC/B,MAAM,CAAC8B,MAAD,EAAS,mCAAT,CAAX,EAA0D;AACxD,YAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;AAGD;AACF;;AAEDC,EAAAA,eAAe,CAACF,MAAD,EAAS;AACtB,UAAMG,oBAAoB,GAAGlC,IAAI,CAC/B+B,MAD+B,EAE/B,2BAF+B,EAG/B3B,kCAH+B,CAAjC;;AAKA,UAAM+B,qBAAqB,GAAGnC,IAAI,CAChC+B,MADgC,EAEhC,4BAFgC,EAGhCjB,mCAHgC,CAAlC;;AAMA,SAAKsB,iBAAL,GAAyB,IAAIF,oBAAJ,CACvBH,MAAM,CAACM,OAAP,CAAeX,WAAf,CAA2BpB,UADJ,CAAzB;AAGA,SAAKgC,kBAAL,GAA0B,IAAIH,qBAAJ,CACxBJ,MAAM,CAACM,OAAP,CAAeX,WAAf,CAA2BX,aADH,CAA1B;AAGD;;AAlCwD","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _get from 'lodash/get';\nimport _hasIn from 'lodash/hasIn';\nimport Qs from 'qs';\nimport { InvenioSearchApi } from './InvenioSearchApi';\n\nclass InvenioSuggestionRequestSerializer {\n  constructor(queryField) {\n    this.queryField = queryField;\n  }\n\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n  serialize = stateQuery => {\n    const { suggestionString } = stateQuery;\n\n    const getParams = {};\n    if (suggestionString !== null) {\n      getParams['q'] = this.queryField + ':' + suggestionString;\n    }\n\n    return Qs.stringify(getParams, { arrayFormat: 'repeat', encode: false });\n  };\n}\n\nclass InvenioSuggestionResponseSerializer {\n  constructor(responseField) {\n    this.responseFieldPath = responseField.split('.');\n  }\n\n  _serializeSuggestions = responseHits => {\n    return Array.from(\n      new Set(\n        responseHits.map(hit => _get(hit.metadata, this.responseFieldPath))\n      )\n    );\n  };\n\n  /**\n   * Return a serialized version of the API backend response for the app state `suggestions`.\n   * @param {object} payload the backend response payload\n   */\n  serialize = payload => {\n    return {\n      suggestions: this._serializeSuggestions(payload.hits.hits || []),\n    };\n  };\n}\n\nexport class InvenioSuggestionApi extends InvenioSearchApi {\n  validateConfig(config) {\n    super.validateConfig(config);\n\n    if (!_hasIn(config, 'invenio.suggestions.queryField')) {\n      throw new Error(\n        'InvenioSuggestionApi config: `invenio.suggestions.queryField` is required.'\n      );\n    }\n    if (!_hasIn(config, 'invenio.suggestions.responseField')) {\n      throw new Error(\n        'InvenioSuggestionApi config: `invenio.suggestions.queryField` is responseField.'\n      );\n    }\n  }\n\n  initSerializers(config) {\n    const requestSerializerCls = _get(\n      config,\n      'invenio.requestSerializer',\n      InvenioSuggestionRequestSerializer\n    );\n    const responseSerializerCls = _get(\n      config,\n      'invenio.responseSerializer',\n      InvenioSuggestionResponseSerializer\n    );\n\n    this.requestSerializer = new requestSerializerCls(\n      config.invenio.suggestions.queryField\n    );\n    this.responseSerializer = new responseSerializerCls(\n      config.invenio.suggestions.responseField\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}