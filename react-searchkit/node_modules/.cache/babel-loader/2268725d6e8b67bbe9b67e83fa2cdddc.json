{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/Pagination/Pagination.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as Paginator } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChange = activePage => {\n      if (activePage === this.props.currentPage) return;\n      this.updateQueryPage(activePage);\n    };\n\n    this._renderElement = (currentPage, currentSize, totalResults, onPageChange, options) => {\n      const pages = Math.ceil(totalResults / currentSize);\n      const boundaryRangeCount = options.boundaryRangeCount;\n      const siblingRangeCount = options.siblingRangeCount;\n      const showEllipsis = options.showEllipsis;\n      const showFirst = options.showFirst;\n      const showLast = options.showLast;\n      const showPrev = options.showPrev;\n      const showNext = options.showNext;\n\n      const _onPageChange = (event, {\n        activePage\n      }) => {\n        onPageChange(activePage);\n      };\n\n      return React.createElement(Paginator, {\n        activePage: currentPage,\n        totalPages: pages,\n        onPageChange: _onPageChange,\n        boundaryRange: boundaryRangeCount,\n        siblingRange: siblingRangeCount,\n        ellipsisItem: showEllipsis ? undefined : null,\n        firstItem: showFirst ? undefined : null,\n        lastItem: showLast ? undefined : null,\n        prevItem: showPrev ? undefined : null,\n        nextItem: showNext ? undefined : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    this.updateQueryPage = this.props.updateQueryPage;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentPage === -1) {\n      this.setInitialState({\n        page: 1\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          currentPage = _this$props.currentPage,\n          currentSize = _this$props.currentSize,\n          options = _this$props.options;\n    return React.createElement(ShouldRender, {\n      condition: !loading && currentPage > -1 && currentSize > -1 && totalResults > 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.renderElement(currentPage, currentSize, totalResults, this.onPageChange, options));\n  }\n\n}\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  options: PropTypes.PropTypes.shape({\n    boundaryRangeCount: PropTypes.number,\n    siblingRangeCount: PropTypes.number,\n    showEllipsis: PropTypes.bool,\n    showFirst: PropTypes.bool,\n    showLast: PropTypes.bool,\n    showPrev: PropTypes.bool,\n    showNext: PropTypes.bool\n  }),\n  renderElement: PropTypes.func\n};\nPagination.defaultProps = {\n  options: {\n    boundaryRangeCount: 1,\n    siblingRangeCount: 1,\n    showEllipsis: true,\n    showFirst: true,\n    showLast: true,\n    showPrev: true,\n    showNext: true\n  },\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/Pagination/Pagination.js"],"names":["React","Component","PropTypes","Pagination","Paginator","ShouldRender","constructor","props","onPageChange","activePage","currentPage","updateQueryPage","_renderElement","currentSize","totalResults","options","pages","Math","ceil","boundaryRangeCount","siblingRangeCount","showEllipsis","showFirst","showLast","showPrev","showNext","_onPageChange","event","undefined","setInitialState","renderElement","componentDidMount","page","render","loading","propTypes","number","isRequired","bool","shape","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as Paginator } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class Pagination extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQueryPage = this.props.updateQueryPage;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentPage === -1) {\n      this.setInitialState({\n        page: 1,\n      });\n    }\n  }\n\n  onPageChange = activePage => {\n    if (activePage === this.props.currentPage) return;\n    this.updateQueryPage(activePage);\n  };\n\n  _renderElement = (\n    currentPage,\n    currentSize,\n    totalResults,\n    onPageChange,\n    options\n  ) => {\n    const pages = Math.ceil(totalResults / currentSize);\n    const boundaryRangeCount = options.boundaryRangeCount;\n    const siblingRangeCount = options.siblingRangeCount;\n    const showEllipsis = options.showEllipsis;\n    const showFirst = options.showFirst;\n    const showLast = options.showLast;\n    const showPrev = options.showPrev;\n    const showNext = options.showNext;\n    const _onPageChange = (event, { activePage }) => {\n      onPageChange(activePage);\n    };\n\n    return (\n      <Paginator\n        activePage={currentPage}\n        totalPages={pages}\n        onPageChange={_onPageChange}\n        boundaryRange={boundaryRangeCount}\n        siblingRange={siblingRangeCount}\n        ellipsisItem={showEllipsis ? undefined : null}\n        firstItem={showFirst ? undefined : null}\n        lastItem={showLast ? undefined : null}\n        prevItem={showPrev ? undefined : null}\n        nextItem={showNext ? undefined : null}\n      />\n    );\n  };\n  render() {\n    const {\n      loading,\n      totalResults,\n      currentPage,\n      currentSize,\n      options,\n    } = this.props;\n\n    return (\n      <ShouldRender\n        condition={\n          !loading && currentPage > -1 && currentSize > -1 && totalResults > 0\n        }\n      >\n        {this.renderElement(\n          currentPage,\n          currentSize,\n          totalResults,\n          this.onPageChange,\n          options\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  options: PropTypes.PropTypes.shape({\n    boundaryRangeCount: PropTypes.number,\n    siblingRangeCount: PropTypes.number,\n    showEllipsis: PropTypes.bool,\n    showFirst: PropTypes.bool,\n    showLast: PropTypes.bool,\n    showPrev: PropTypes.bool,\n    showNext: PropTypes.bool,\n  }),\n  renderElement: PropTypes.func,\n};\n\nPagination.defaultProps = {\n  options: {\n    boundaryRangeCount: 1,\n    siblingRangeCount: 1,\n    showEllipsis: true,\n    showFirst: true,\n    showLast: true,\n    showPrev: true,\n    showNext: true,\n  },\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}