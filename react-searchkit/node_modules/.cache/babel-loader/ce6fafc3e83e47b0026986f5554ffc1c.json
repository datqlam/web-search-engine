{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/ReactSearchKit/ReactSearchKit.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { configureStore } from '../../store';\nimport { UrlQueryStringHandler } from '../..//api';\nimport { Bootstrap } from '../Bootstrap';\nexport class ReactSearchKit extends Component {\n  constructor(props) {\n    super(props);\n    const appConfig = {\n      searchApi: props.searchApi,\n      suggestionApi: props.suggestionApi,\n      urlQueryStringHandler: props.persistentUrl.enabled ? props.persistentUrl.customHandler || new UrlQueryStringHandler(props.persistentUrl.overrideConfig) : null,\n      defaultSortByOnEmptyQuery: props.defaultSortByOnEmptyQuery\n    };\n    this.store = configureStore(appConfig);\n  }\n\n  render() {\n    const searchOnInit = this.props.searchOnInit;\n    return React.createElement(Provider, {\n      store: this.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Bootstrap, {\n      searchOnInit: searchOnInit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\nReactSearchKit.propTypes = {\n  searchApi: PropTypes.object,\n  suggestionApi: PropTypes.object,\n  persistentUrl: PropTypes.shape({\n    enabled: PropTypes.bool,\n    overrideConfig: PropTypes.shape({\n      withHistory: PropTypes.bool,\n      urlParamsMapping: PropTypes.object,\n      paramValidator: PropTypes.object,\n      urlParser: PropTypes.object\n    }),\n    customHandler: PropTypes.object\n  }),\n  searchOnInit: PropTypes.bool,\n  defaultSortByOnEmptyQuery: PropTypes.string\n};\nReactSearchKit.defaultProps = {\n  searchApi: null,\n  suggestionApi: null,\n  persistentUrl: {\n    enabled: true,\n    overrideConfig: {\n      withHistory: true\n    },\n    customHandler: null\n  },\n  searchOnInit: true,\n  defaultSortByOnEmptyQuery: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ReactSearchKit/ReactSearchKit.js"],"names":["React","Component","Provider","PropTypes","configureStore","UrlQueryStringHandler","Bootstrap","ReactSearchKit","constructor","props","appConfig","searchApi","suggestionApi","urlQueryStringHandler","persistentUrl","enabled","customHandler","overrideConfig","defaultSortByOnEmptyQuery","store","render","searchOnInit","children","propTypes","object","shape","bool","withHistory","urlParamsMapping","paramValidator","urlParser","string","defaultProps"],"mappings":";;AAAA;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,qBAAT,QAAsC,YAAtC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAC5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,SAAS,GAAG;AAChBC,MAAAA,SAAS,EAAEF,KAAK,CAACE,SADD;AAEhBC,MAAAA,aAAa,EAAEH,KAAK,CAACG,aAFL;AAGhBC,MAAAA,qBAAqB,EAAEJ,KAAK,CAACK,aAAN,CAAoBC,OAApB,GACnBN,KAAK,CAACK,aAAN,CAAoBE,aAApB,IACA,IAAIX,qBAAJ,CAA0BI,KAAK,CAACK,aAAN,CAAoBG,cAA9C,CAFmB,GAGnB,IANY;AAOhBC,MAAAA,yBAAyB,EAAET,KAAK,CAACS;AAPjB,KAAlB;AASA,SAAKC,KAAL,GAAaf,cAAc,CAACM,SAAD,CAA3B;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACCC,YADD,GACkB,KAAKZ,KADvB,CACCY,YADD;AAGP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKZ,KAAL,CAAWa,QAAnD,CADF,CADF;AAKD;;AAvB2C;AA0B9Cf,cAAc,CAACgB,SAAf,GAA2B;AACzBZ,EAAAA,SAAS,EAAER,SAAS,CAACqB,MADI;AAEzBZ,EAAAA,aAAa,EAAET,SAAS,CAACqB,MAFA;AAGzBV,EAAAA,aAAa,EAAEX,SAAS,CAACsB,KAAV,CAAgB;AAC7BV,IAAAA,OAAO,EAAEZ,SAAS,CAACuB,IADU;AAE7BT,IAAAA,cAAc,EAAEd,SAAS,CAACsB,KAAV,CAAgB;AAC9BE,MAAAA,WAAW,EAAExB,SAAS,CAACuB,IADO;AAE9BE,MAAAA,gBAAgB,EAAEzB,SAAS,CAACqB,MAFE;AAG9BK,MAAAA,cAAc,EAAE1B,SAAS,CAACqB,MAHI;AAI9BM,MAAAA,SAAS,EAAE3B,SAAS,CAACqB;AAJS,KAAhB,CAFa;AAQ7BR,IAAAA,aAAa,EAAEb,SAAS,CAACqB;AARI,GAAhB,CAHU;AAazBH,EAAAA,YAAY,EAAElB,SAAS,CAACuB,IAbC;AAczBR,EAAAA,yBAAyB,EAAEf,SAAS,CAAC4B;AAdZ,CAA3B;AAiBAxB,cAAc,CAACyB,YAAf,GAA8B;AAC5BrB,EAAAA,SAAS,EAAE,IADiB;AAE5BC,EAAAA,aAAa,EAAE,IAFa;AAG5BE,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,IADI;AAEbE,IAAAA,cAAc,EAAE;AACdU,MAAAA,WAAW,EAAE;AADC,KAFH;AAKbX,IAAAA,aAAa,EAAE;AALF,GAHa;AAU5BK,EAAAA,YAAY,EAAE,IAVc;AAW5BH,EAAAA,yBAAyB,EAAE;AAXC,CAA9B","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { configureStore } from '../../store';\nimport { UrlQueryStringHandler } from '../..//api';\nimport { Bootstrap } from '../Bootstrap';\n\nexport class ReactSearchKit extends Component {\n  constructor(props) {\n    super(props);\n    const appConfig = {\n      searchApi: props.searchApi,\n      suggestionApi: props.suggestionApi,\n      urlQueryStringHandler: props.persistentUrl.enabled\n        ? props.persistentUrl.customHandler ||\n          new UrlQueryStringHandler(props.persistentUrl.overrideConfig)\n        : null,\n      defaultSortByOnEmptyQuery: props.defaultSortByOnEmptyQuery,\n    };\n    this.store = configureStore(appConfig);\n  }\n\n  render() {\n    const { searchOnInit } = this.props;\n\n    return (\n      <Provider store={this.store}>\n        <Bootstrap searchOnInit={searchOnInit}>{this.props.children}</Bootstrap>\n      </Provider>\n    );\n  }\n}\n\nReactSearchKit.propTypes = {\n  searchApi: PropTypes.object,\n  suggestionApi: PropTypes.object,\n  persistentUrl: PropTypes.shape({\n    enabled: PropTypes.bool,\n    overrideConfig: PropTypes.shape({\n      withHistory: PropTypes.bool,\n      urlParamsMapping: PropTypes.object,\n      paramValidator: PropTypes.object,\n      urlParser: PropTypes.object,\n    }),\n    customHandler: PropTypes.object,\n  }),\n  searchOnInit: PropTypes.bool,\n  defaultSortByOnEmptyQuery: PropTypes.string,\n};\n\nReactSearchKit.defaultProps = {\n  searchApi: null,\n  suggestionApi: null,\n  persistentUrl: {\n    enabled: true,\n    overrideConfig: {\n      withHistory: true,\n    },\n    customHandler: null,\n  },\n  searchOnInit: true,\n  defaultSortByOnEmptyQuery: null,\n};\n"]},"metadata":{},"sourceType":"module"}