{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/ActiveAggregations/ActiveAggregations.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Icon } from 'semantic-ui-react';\nexport default class ActiveAggregations extends Component {\n  constructor(props) {\n    super(props);\n\n    this._getNestedActiveAggregation = (fieldName, aggrValue, aggregationIndex) => {\n      const keys = Object.keys(aggrValue).filter(key => key !== 'value');\n\n      if (keys.length === 1) {\n        const nestedKey = keys[0];\n        return this._getNestedActiveAggregation(nestedKey, aggrValue[nestedKey], aggregationIndex);\n      } else {\n        const selectionLabel = aggrValue['value'].split('.').join(':');\n        return {\n          label: \"\".concat(selectionLabel),\n          aggregationIndex: aggregationIndex\n        };\n      }\n    };\n\n    this._getActiveAggregations = aggregations => {\n      return aggregations.map((aggregation, aggregationIndex) => {\n        const rootKey = Object.keys(aggregation)[0];\n        return this._getNestedActiveAggregation(rootKey, aggregation[rootKey], aggregationIndex);\n      });\n    };\n\n    this._onClick = (event, position) => {\n      const stateQueryAggregation = this.props.aggregations[position];\n      this.updateQueryAggregation(stateQueryAggregation);\n    };\n\n    this._renderSelectedAggregation = (label, key, removeAggregationClickHandler) => {\n      return React.createElement(Label, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, label, \" \", React.createElement(Icon, {\n        name: \"close\",\n        onClick: removeAggregationClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    };\n\n    this._renderElement = aggregations => {\n      const indexedLabels = this._getActiveAggregations(aggregations);\n\n      indexedLabels.sort((first, second) => first['label'] < second['label']);\n      const sortedLabels = indexedLabels.map(indexedLabel => {\n        const value = indexedLabel['label'];\n        const key = indexedLabel['aggregationIndex'];\n\n        const removeAggregationClickHandler = (event, input) => {\n          this._onClick(event, key);\n        };\n\n        return this.renderSelectedAggregation(value, key, removeAggregationClickHandler);\n      });\n      return sortedLabels.length ? sortedLabels : null;\n    };\n\n    this.updateQueryAggregation = props.updateQueryAggregation;\n    this.renderElement = props.renderElement || this._renderElement;\n    this.renderSelectedAggregation = props.renderSelectedAggregation || this._renderSelectedAggregation;\n  }\n\n  render() {\n    const aggregations = this.props.aggregations;\n    return this.renderElement(aggregations);\n  }\n\n}\nActiveAggregations.propTypes = {\n  aggregations: PropTypes.array.isRequired,\n  updateQueryAggregation: PropTypes.func.isRequired,\n  renderElement: PropTypes.func\n};\nActiveAggregations.defaultProps = {};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ActiveAggregations/ActiveAggregations.js"],"names":["React","Component","PropTypes","Label","Icon","ActiveAggregations","constructor","props","_getNestedActiveAggregation","fieldName","aggrValue","aggregationIndex","keys","Object","filter","key","length","nestedKey","selectionLabel","split","join","label","_getActiveAggregations","aggregations","map","aggregation","rootKey","_onClick","event","position","stateQueryAggregation","updateQueryAggregation","_renderSelectedAggregation","removeAggregationClickHandler","_renderElement","indexedLabels","sort","first","second","sortedLabels","indexedLabel","value","input","renderSelectedAggregation","renderElement","render","propTypes","array","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Icon } from 'semantic-ui-react';\n\nexport default class ActiveAggregations extends Component {\n  constructor(props) {\n    super(props);\n    this.updateQueryAggregation = props.updateQueryAggregation;\n    this.renderElement = props.renderElement || this._renderElement;\n    this.renderSelectedAggregation = props.renderSelectedAggregation || this._renderSelectedAggregation;\n  }\n\n  _getNestedActiveAggregation = (fieldName, aggrValue, aggregationIndex) => {\n    const keys = Object.keys(aggrValue).filter(key => key !== 'value');\n    if (keys.length === 1) {\n      const nestedKey = keys[0];\n      return this._getNestedActiveAggregation(\n        nestedKey,\n        aggrValue[nestedKey],\n        aggregationIndex\n      );\n    } else {\n      const selectionLabel = aggrValue['value'].split('.').join(':');\n      return {\n        label: `${selectionLabel}`,\n        aggregationIndex: aggregationIndex,\n      };\n    }\n  };\n\n  _getActiveAggregations = aggregations => {\n    return aggregations.map((aggregation, aggregationIndex) => {\n      const rootKey = Object.keys(aggregation)[0];\n      return this._getNestedActiveAggregation(\n        rootKey,\n        aggregation[rootKey],\n        aggregationIndex\n      );\n    });\n  };\n\n  _onClick = (event, position) => {\n    const stateQueryAggregation = this.props.aggregations[position];\n    this.updateQueryAggregation(stateQueryAggregation);\n  };\n\n  _renderSelectedAggregation = (label, key, removeAggregationClickHandler) => {\n    return (\n      <Label key={key}>\n        {label} <Icon name=\"close\" onClick={removeAggregationClickHandler} />\n      </Label>\n    );\n  };\n\n  _renderElement = aggregations => {\n    const indexedLabels = this._getActiveAggregations(aggregations);\n    indexedLabels.sort((first, second) => first['label'] < second['label']);\n    const sortedLabels = indexedLabels.map(indexedLabel => {\n      const value = indexedLabel['label'];\n      const key = indexedLabel['aggregationIndex'];\n      const removeAggregationClickHandler = (event, input) => {\n        this._onClick(event, key);\n      };\n      return this.renderSelectedAggregation(\n        value,\n        key,\n        removeAggregationClickHandler\n      );\n    });\n    return sortedLabels.length ? sortedLabels : null;\n  };\n\n  render() {\n    const aggregations = this.props.aggregations;\n    return this.renderElement(aggregations);\n  }\n}\n\nActiveAggregations.propTypes = {\n  aggregations: PropTypes.array.isRequired,\n  updateQueryAggregation: PropTypes.func.isRequired,\n  renderElement: PropTypes.func,\n};\n\nActiveAggregations.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}