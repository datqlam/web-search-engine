{"ast":null,"code":"import _defineProperty from \"/home/datio/workspace/react-searchkit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { RESULTS_LOADING, RESULTS_FETCH_SUCCESS, RESULTS_FETCH_ERROR } from '../types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case RESULTS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true,\n        data: _objectSpread({}, state.data)\n      });\n\n    case RESULTS_FETCH_SUCCESS:\n      return {\n        loading: false,\n        data: _objectSpread({}, state.data, {\n          // aggregations: action.payload.aggregations,\n          hits: action.payload.hits,\n          total: action.payload.total\n        }),\n        error: {}\n      };\n\n    case RESULTS_FETCH_ERROR:\n      return {\n        loading: false,\n        data: _objectSpread({}, state.data, {\n          // aggregations: {},\n          hits: [],\n          total: 0\n        }),\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/state/reducers/results.js"],"names":["RESULTS_LOADING","RESULTS_FETCH_SUCCESS","RESULTS_FETCH_ERROR","state","action","type","loading","data","hits","payload","total","error"],"mappings":";;;;;;AAAA;;;;;;;AAQA,SACEA,eADF,EAEEC,qBAFF,EAGEC,mBAHF,QAIO,UAJP;AAMA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,eAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,IAAI,oBACCJ,KAAK,CAACI,IADP;AAHN;;AAOF,SAAKN,qBAAL;AACE,aAAO;AACLK,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,oBACCJ,KAAK,CAACI,IADP;AAEF;AACAC,UAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD,IAHnB;AAIFE,UAAAA,KAAK,EAAEN,MAAM,CAACK,OAAP,CAAeC;AAJpB,UAFC;AAQLC,QAAAA,KAAK,EAAE;AARF,OAAP;;AAUF,SAAKT,mBAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,oBACCJ,KAAK,CAACI,IADP;AAEF;AACAC,UAAAA,IAAI,EAAE,EAHJ;AAIFE,UAAAA,KAAK,EAAE;AAJL,UAFC;AAQLC,QAAAA,KAAK,EAAEP,MAAM,CAACK;AART,OAAP;;AAUF;AACE,aAAON,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport {\n  RESULTS_LOADING,\n  RESULTS_FETCH_SUCCESS,\n  RESULTS_FETCH_ERROR,\n} from '../types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case RESULTS_LOADING:\n      return {\n        ...state,\n        loading: true,\n        data: {\n          ...state.data,\n        },\n      };\n    case RESULTS_FETCH_SUCCESS:\n      return {\n        loading: false,\n        data: {\n          ...state.data,\n          // aggregations: action.payload.aggregations,\n          hits: action.payload.hits,\n          total: action.payload.total,\n        },\n        error: {},\n      };\n    case RESULTS_FETCH_ERROR:\n      return {\n        loading: false,\n        data: {\n          ...state.data,\n          // aggregations: {},\n          hits: [],\n          total: 0,\n        },\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}