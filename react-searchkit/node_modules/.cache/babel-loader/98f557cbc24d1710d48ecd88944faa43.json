{"ast":null,"code":"/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { connect } from '../../store';\nimport { resetQuery } from '../../state/actions';\nimport EmptyResultsComponent from './EmptyResults';\n\nconst mapDispatchToProps = dispatch => ({\n  resetQuery: () => dispatch(resetQuery())\n});\n\nexport const EmptyResults = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n  error: state.results.error,\n  queryString: state.query.queryString\n}), mapDispatchToProps)(EmptyResultsComponent);","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/EmptyResults/index.js"],"names":["connect","resetQuery","EmptyResultsComponent","mapDispatchToProps","dispatch","EmptyResults","state","loading","results","totalResults","data","total","error","queryString","query"],"mappings":"AAAA;;;;;;;AAQA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,qBAAP,MAAkC,gBAAlC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCH,EAAAA,UAAU,EAAE,MAAMG,QAAQ,CAACH,UAAU,EAAX;AADY,CAAL,CAAnC;;AAGA,OAAO,MAAMI,YAAY,GAAGL,OAAO,CACjCM,KAAK,KAAK;AACRC,EAAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcD,OADf;AAERE,EAAAA,YAAY,EAAEH,KAAK,CAACE,OAAN,CAAcE,IAAd,CAAmBC,KAFzB;AAGRC,EAAAA,KAAK,EAAEN,KAAK,CAACE,OAAN,CAAcI,KAHb;AAIRC,EAAAA,WAAW,EAAEP,KAAK,CAACQ,KAAN,CAAYD;AAJjB,CAAL,CAD4B,EAOjCV,kBAPiC,CAAP,CAQ1BD,qBAR0B,CAArB","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { resetQuery } from '../../state/actions';\nimport EmptyResultsComponent from './EmptyResults';\n\nconst mapDispatchToProps = dispatch => ({\n  resetQuery: () => dispatch(resetQuery()),\n});\nexport const EmptyResults = connect(\n  state => ({\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    error: state.results.error,\n    queryString: state.query.queryString,\n  }),\n  mapDispatchToProps\n)(EmptyResultsComponent);\n"]},"metadata":{},"sourceType":"module"}