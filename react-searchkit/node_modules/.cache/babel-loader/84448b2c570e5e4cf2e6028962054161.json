{"ast":null,"code":"/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { connect } from '../../store';\nimport { updateQueryAggregation } from '../../state/actions';\nimport AggregatorComponent from './Aggregator';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryAggregation: aggregation => dispatch(updateQueryAggregation(aggregation))\n});\n\nexport const Aggregator = connect(state => ({\n  userSelectionAggregations: state.query.aggregations,\n  resultsAggregations: state.results.data.aggregations\n}), mapDispatchToProps)(AggregatorComponent);","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/Aggregator/index.js"],"names":["connect","updateQueryAggregation","AggregatorComponent","mapDispatchToProps","dispatch","aggregation","Aggregator","state","userSelectionAggregations","query","aggregations","resultsAggregations","results","data"],"mappings":"AAAA;;;;;;;AAQA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,OAAOC,mBAAP,MAAgC,cAAhC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCH,EAAAA,sBAAsB,EAAEI,WAAW,IACjCD,QAAQ,CAACH,sBAAsB,CAACI,WAAD,CAAvB;AAF4B,CAAL,CAAnC;;AAKA,OAAO,MAAMC,UAAU,GAAGN,OAAO,CAC/BO,KAAK,KAAK;AACRC,EAAAA,yBAAyB,EAAED,KAAK,CAACE,KAAN,CAAYC,YAD/B;AAERC,EAAAA,mBAAmB,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBH;AAFhC,CAAL,CAD0B,EAK/BP,kBAL+B,CAAP,CAMxBD,mBANwB,CAAnB","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQueryAggregation } from '../../state/actions';\nimport AggregatorComponent from './Aggregator';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryAggregation: aggregation =>\n    dispatch(updateQueryAggregation(aggregation)),\n});\n\nexport const Aggregator = connect(\n  state => ({\n    userSelectionAggregations: state.query.aggregations,\n    resultsAggregations: state.results.data.aggregations,\n  }),\n  mapDispatchToProps\n)(AggregatorComponent);\n"]},"metadata":{},"sourceType":"module"}