{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/SortOrder/SortOrder.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class SortOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderElement = (currentSortOrder, options, onValueChange) => {\n      const _options = options.map((element, index) => {\n        return {\n          key: index,\n          text: element.text,\n          value: element.value\n        };\n      });\n\n      return React.createElement(Dropdown, {\n        selection: true,\n        compact: true,\n        options: _options,\n        value: currentSortOrder,\n        onChange: (e, {\n          value\n        }) => onValueChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    };\n\n    this.onChange = value => {\n      if (value === this.props.currentSortOrder) return;\n      this.updateQuerySortOrder(value);\n    };\n\n    this.options = props.values;\n    this.defaultValue = this.props.defaultValue;\n    this.updateQuerySortOrder = props.updateQuerySortOrder;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSortOrder === null) {\n      this.setInitialState({\n        sortOrder: this.defaultValue\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentSortOrder = _this$props.currentSortOrder,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults;\n    return React.createElement(ShouldRender, {\n      condition: currentSortOrder !== null && !loading && totalResults > 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderElement(currentSortOrder, this.options, this.onChange));\n  }\n\n}\nSortOrder.propTypes = {\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySortOrder: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func\n};\nSortOrder.defaultProps = {\n  currentSortOrder: null,\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/SortOrder/SortOrder.js"],"names":["React","Component","PropTypes","Dropdown","ShouldRender","SortOrder","constructor","props","_renderElement","currentSortOrder","options","onValueChange","_options","map","element","index","key","text","value","e","onChange","updateQuerySortOrder","values","defaultValue","setInitialState","renderElement","componentDidMount","sortOrder","render","loading","totalResults","propTypes","array","isRequired","string","bool","number","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class SortOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.defaultValue = this.props.defaultValue;\n    this.updateQuerySortOrder = props.updateQuerySortOrder;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSortOrder === null) {\n      this.setInitialState({\n        sortOrder: this.defaultValue,\n      });\n    }\n  }\n\n  _renderElement = (currentSortOrder, options, onValueChange) => {\n    const _options = options.map((element, index) => {\n      return { key: index, text: element.text, value: element.value };\n    });\n    return (\n      <Dropdown\n        selection\n        compact\n        options={_options}\n        value={currentSortOrder}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    );\n  };\n\n  onChange = value => {\n    if (value === this.props.currentSortOrder) return;\n    this.updateQuerySortOrder(value);\n  };\n\n  render() {\n    const { currentSortOrder, loading, totalResults } = this.props;\n    return (\n      <ShouldRender\n        condition={currentSortOrder !== null && !loading && totalResults > 1}\n      >\n        {this.renderElement(currentSortOrder, this.options, this.onChange)}\n      </ShouldRender>\n    );\n  }\n}\n\nSortOrder.propTypes = {\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySortOrder: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func,\n};\n\nSortOrder.defaultProps = {\n  currentSortOrder: null,\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}