{"ast":null,"code":"/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport { connect } from '../../store';\nimport { updateQueryPaginationSize, setInitialState } from '../../state/actions';\nimport ResultsPerPageComponent from './ResultsPerPage';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySize: size => dispatch(updateQueryPaginationSize(size)),\n  setInitialState: value => dispatch(setInitialState(value))\n});\n\nexport const ResultsPerPage = connect(state => ({\n  loading: state.results.loading,\n  currentSize: state.query.size,\n  totalResults: state.results.data.total\n}), mapDispatchToProps)(ResultsPerPageComponent);","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ResultsPerPage/index.js"],"names":["connect","updateQueryPaginationSize","setInitialState","ResultsPerPageComponent","mapDispatchToProps","dispatch","updateQuerySize","size","value","ResultsPerPage","state","loading","results","currentSize","query","totalResults","data","total"],"mappings":"AAAA;;;;;;;AAQA,SAASA,OAAT,QAAwB,aAAxB;AACA,SACEC,yBADF,EAEEC,eAFF,QAGO,qBAHP;AAIA,OAAOC,uBAAP,MAAoC,kBAApC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,eAAe,EAAEC,IAAI,IAAIF,QAAQ,CAACJ,yBAAyB,CAACM,IAAD,CAA1B,CADK;AAEtCL,EAAAA,eAAe,EAAEM,KAAK,IAAIH,QAAQ,CAACH,eAAe,CAACM,KAAD,CAAhB;AAFI,CAAL,CAAnC;;AAKA,OAAO,MAAMC,cAAc,GAAGT,OAAO,CACnCU,KAAK,KAAK;AACRC,EAAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcD,OADf;AAERE,EAAAA,WAAW,EAAEH,KAAK,CAACI,KAAN,CAAYP,IAFjB;AAGRQ,EAAAA,YAAY,EAAEL,KAAK,CAACE,OAAN,CAAcI,IAAd,CAAmBC;AAHzB,CAAL,CAD8B,EAMnCb,kBANmC,CAAP,CAO5BD,uBAP4B,CAAvB","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport {\n  updateQueryPaginationSize,\n  setInitialState,\n} from '../../state/actions';\nimport ResultsPerPageComponent from './ResultsPerPage';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySize: size => dispatch(updateQueryPaginationSize(size)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const ResultsPerPage = connect(\n  state => ({\n    loading: state.results.loading,\n    currentSize: state.query.size,\n    totalResults: state.results.data.total,\n  }),\n  mapDispatchToProps\n)(ResultsPerPageComponent);\n"]},"metadata":{},"sourceType":"module"}