{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/Results.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport { connect } from './lib/store';\nimport { Grid, Icon, Label } from 'semantic-ui-react';\nimport { ActiveAggregations, Count, LayoutSwitcher, Pagination, ResultsMultiLayout, ResultsPerPage, Sort } from './lib/components';\nconst Spacer = connect(state => ({\n  loading: state.results.loading,\n  total: state.results.data.total\n}))(({\n  text,\n  loading,\n  total\n}) => loading || total === 0 ? null : React.createElement(\"span\", {\n  style: {\n    margin: '0 0.5em'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, text));\n\nconst renderSelectedAggregation = (label, key, removeAggregationClickHandler) => {\n  const capitalize = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const mainAggregationLabel = capitalize(label.split(':').slice(0, 1).join(''));\n  const nestedLabel = label.split(':').filter((item, index) => index % 2 !== 0).map(item => capitalize(item)).join(' : ');\n  const newLabel = ''.concat(mainAggregationLabel, ': ', nestedLabel);\n  return React.createElement(Label, {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, newLabel, \" \", React.createElement(Icon, {\n    name: \"close\",\n    onClick: removeAggregationClickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n};\n\nconst ActiveAggregationsSpacer = connect(state => ({\n  aggregations: state.query.aggregations\n}))(({\n  text,\n  aggregations\n}) => aggregations.length ? React.createElement(Grid, {\n  relaxed: true,\n  style: {\n    padding: '0 0 1em 0'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(Spacer, {\n  text: \"Active filters:\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(ActiveAggregations, {\n  renderSelectedAggregation: renderSelectedAggregation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n})) : null);\nexport class Results extends Component {\n  constructor(props) {\n    super(props);\n    this.sortValues = this.props.sortValues;\n    this.resultsPerPageValues = this.props.resultsPerPageValues;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      relaxed: true,\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Spacer, {\n      text: \"Found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Count, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      width: 8,\n      textAlign: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Spacer, {\n      text: \"Show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(ResultsPerPage, {\n      values: this.resultsPerPageValues,\n      defaultValue: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Spacer, {\n      text: \"results per page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Spacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(LayoutSwitcher, {\n      defaultLayout: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      relaxed: true,\n      style: {\n        padding: '2em 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(ResultsMultiLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      relaxed: true,\n      verticalAlign: \"middle\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\nResults.propTypes = {};\nResults.defaultProps = {};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/Results.js"],"names":["React","Component","connect","Grid","Icon","Label","ActiveAggregations","Count","LayoutSwitcher","Pagination","ResultsMultiLayout","ResultsPerPage","Sort","Spacer","state","loading","results","total","data","text","margin","renderSelectedAggregation","label","key","removeAggregationClickHandler","capitalize","string","charAt","toUpperCase","slice","mainAggregationLabel","split","join","nestedLabel","filter","item","index","map","newLabel","concat","ActiveAggregationsSpacer","aggregations","query","length","padding","Results","constructor","props","sortValues","resultsPerPageValues","render","propTypes","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport { connect } from './lib/store';\nimport { Grid, Icon, Label } from 'semantic-ui-react';\nimport {\n  ActiveAggregations,\n  Count,\n  LayoutSwitcher,\n  Pagination,\n  ResultsMultiLayout,\n  ResultsPerPage,\n  Sort,\n} from './lib/components';\n\nconst Spacer = connect(state => ({\n  loading: state.results.loading,\n  total: state.results.data.total,\n}))(({ text, loading, total }) =>\n  loading || total === 0 ? null : (\n    <span style={{ margin: '0 0.5em' }}>{text}</span>\n  )\n);\n\nconst renderSelectedAggregation = (\n  label,\n  key,\n  removeAggregationClickHandler\n) => {\n  const capitalize = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const mainAggregationLabel = capitalize(\n    label\n      .split(':')\n      .slice(0, 1)\n      .join('')\n  );\n  const nestedLabel = label\n    .split(':')\n    .filter((item, index) => index % 2 !== 0)\n    .map(item => capitalize(item))\n    .join(' : ');\n  const newLabel = ''.concat(mainAggregationLabel, ': ', nestedLabel);\n  return (\n    <Label key={key}>\n      {newLabel} <Icon name=\"close\" onClick={removeAggregationClickHandler} />\n    </Label>\n  );\n};\n\nconst ActiveAggregationsSpacer = connect(state => ({\n  aggregations: state.query.aggregations,\n}))(({ text, aggregations }) =>\n  aggregations.length ? (\n    <Grid relaxed style={{ padding: '0 0 1em 0' }}>\n      <Spacer text=\"Active filters:\" />\n      <ActiveAggregations\n        renderSelectedAggregation={renderSelectedAggregation}\n      />\n    </Grid>\n  ) : null\n);\n\nexport class Results extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortValues = this.props.sortValues;\n    this.resultsPerPageValues = this.props.resultsPerPageValues;\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <ActiveAggregationsSpacer /> */}\n        <Grid relaxed verticalAlign=\"middle\">\n          <Grid.Column width={8}>\n            <span>\n              <Spacer text=\"Found\" />\n              <Count />\n              {/* <Spacer text=\"results sorted by\" />\n              <Sort values={this.sortValues} /> */}\n            </span>\n          </Grid.Column>\n          <Grid.Column width={8} textAlign=\"right\">\n            <span>\n              <Spacer text=\"Show\" />\n              <ResultsPerPage\n                values={this.resultsPerPageValues}\n                defaultValue={10}\n              />\n              <Spacer text=\"results per page\" />\n            </span>\n            <Spacer />\n            <LayoutSwitcher defaultLayout=\"grid\" />\n          </Grid.Column>\n        </Grid>\n        <Grid relaxed style={{ padding: '2em 0' }}>\n          <ResultsMultiLayout />\n        </Grid>\n        <Grid relaxed verticalAlign=\"middle\" textAlign=\"center\">\n          <Pagination />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nResults.propTypes = {};\n\nResults.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}