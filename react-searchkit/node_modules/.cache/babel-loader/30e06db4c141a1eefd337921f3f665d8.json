{"ast":null,"code":"var _jsxFileName = \"/home/datio/workspace/react-searchkit/src/lib/components/ResultsPerPage/ResultsPerPage.js\";\n\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\nexport default class ResultsPerPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this._renderElement = (currentSize, options, onValueChange) => {\n      const _options = options.map((element, index) => {\n        return {\n          key: index,\n          text: element.text,\n          value: element.value\n        };\n      });\n\n      return React.createElement(Dropdown, {\n        inline: true,\n        compact: true,\n        options: _options,\n        value: currentSize,\n        onChange: (e, {\n          value\n        }) => onValueChange(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    };\n\n    this.onChange = value => {\n      if (value === this.props.currentSize) return;\n      this.updateQuerySize(value);\n    };\n\n    this.options = props.values;\n    this.defaultValue = props.defaultValue;\n    this.updateQuerySize = this.props.updateQuerySize;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSize === -1) {\n      this.setInitialState({\n        size: this.defaultValue\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          loading = _this$props.loading,\n          currentSize = _this$props.currentSize,\n          totalResults = _this$props.totalResults;\n    return React.createElement(ShouldRender, {\n      condition: !loading && totalResults > 0 && currentSize !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.renderElement(currentSize, this.options, this.onChange));\n  }\n\n}\nResultsPerPage.propTypes = {\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.number.isRequired,\n  updateQuerySize: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func\n};\nResultsPerPage.defaultProps = {\n  renderElement: null\n};","map":{"version":3,"sources":["/home/datio/workspace/react-searchkit/src/lib/components/ResultsPerPage/ResultsPerPage.js"],"names":["React","Component","PropTypes","Dropdown","ShouldRender","ResultsPerPage","constructor","props","_renderElement","currentSize","options","onValueChange","_options","map","element","index","key","text","value","e","onChange","updateQuerySize","values","defaultValue","setInitialState","renderElement","componentDidMount","size","render","loading","totalResults","propTypes","number","isRequired","bool","array","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { ShouldRender } from '../ShouldRender';\n\nexport default class ResultsPerPage extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.defaultValue = props.defaultValue;\n    this.updateQuerySize = this.props.updateQuerySize;\n    this.setInitialState = props.setInitialState;\n    this.renderElement = props.renderElement || this._renderElement;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSize === -1) {\n      this.setInitialState({\n        size: this.defaultValue,\n      });\n    }\n  }\n\n  _renderElement = (currentSize, options, onValueChange) => {\n    const _options = options.map((element, index) => {\n      return { key: index, text: element.text, value: element.value };\n    });\n    return (\n      <Dropdown\n        inline\n        compact\n        options={_options}\n        value={currentSize}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    );\n  };\n\n  onChange = value => {\n    if (value === this.props.currentSize) return;\n    this.updateQuerySize(value);\n  };\n\n  render() {\n    const { loading, currentSize, totalResults } = this.props;\n    return (\n      <ShouldRender\n        condition={!loading && totalResults > 0 && currentSize !== -1}\n      >\n        {this.renderElement(currentSize, this.options, this.onChange)}\n      </ShouldRender>\n    );\n  }\n}\n\nResultsPerPage.propTypes = {\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.number.isRequired,\n  updateQuerySize: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  renderElement: PropTypes.func,\n};\n\nResultsPerPage.defaultProps = {\n  renderElement: null,\n};\n"]},"metadata":{},"sourceType":"module"}